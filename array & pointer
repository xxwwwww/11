1. 
#include <stdio.h>
int main()
{
    int a[5] = { 1, 2, 3, 4, 5 };
    int *ptr = (int *)(&a + 1);                         // &a + 1    ：  &a求的是整个数组的地址  &a+1是跳过整个数组，指向数组的后面
    printf("%d %d\n", *(a + 1), *(ptr - 1));            // *(a+1）   
    system("pause");
    return 0;
}
&数组名—数组名表示整个数组，求的是整个数组的地址；&数组名+1表示跳过整个数组，指向此数组的后面。 
* 数组名，指向该数组内的第一个元素，如此题中表示a[0]；* (数组名+1)指向数组中的第二个元素，如此题中表示a[1]。 
所以此题中* (a + 1)结果为2, * (ptr - 1)结果为5


2.
int main()
{
    int a[4] = { 1, 2, 3, 4};
    int *ptr1 = (int *)(&a + 1);
    int *ptr2 = (int *)((int)a + 1);
    printf("%x %x\n", ptr1[-1], *ptr2);
    system("pause");
    return 0;
}

//ptr1[-1] = *(ptr-1)


3.#include <stdio.h>
int main()
{
    int a[3][2] = { (0, 1), (2, 3), (4, 5) };
    int *p;
    p = a[0];
    printf("%d\n", p[0]);         //1
    system("pause");
    return 0;
}

// 逗号表达式，取逗号后面的数
//a[3][2] ,三行两列， a[3][2] = {1,3,5,0,0,0}
int a[3][2] = {{0,1},{2,3},{4,5}}={0,1,2,3,4,5}


